// INTERFACE ODK 1500S V2.0
Context=realtime
Trace=on
HeapSize=4k
HeapMaxBlockSize=1024
STEP7Prefix=FFT_Filter_RT

/* 
 * Elementary Datatypes:
 *   ODK_DOUBLE      LREAL           64 bit floating point, IEEE 754
 *   ODK_FLOAT       REAL            32 bit floating point, IEEE 754
 *   ODK_INT64       LINT            64 bit signed integer
 *   ODK_INT32       DINT            32 bit signed integer
 *   ODK_INT16       INT             16 bit signed integer
 *   ODK_INT8        SINT            8 bit signed integer
 *   ODK_UINT64      ULINT           64 bit unsigned integer
 *   ODK_UINT32      UDINT           32 bit unsigned integer
 *   ODK_UINT16      UINT            16 bit unsigned integer
 *   ODK_UINT8       USINT           8 bit unsigned integer
 *   ODK_LWORD       LWORD           64 bit bitstring
 *   ODK_DWORD       DWORD           32 bit bitstring
 *   ODK_WORD        WORD            16 bit bitstring
 *   ODK_BYTE        BYTE            8 bit bitstring
 *   ODK_BOOL        BOOL            1 bit bitstring (ODK_TRUE or ODK_FALSE)
 *   ODK_LTIME       LTIME           64 bit duration in nanoseconds
 *   ODK_TIME        TIME            32 bit duration in milliseconds
 *   ODK_LDT         LDT             64 bit date and time of day in nanoseconds
 *   ODK_LTOD        LTOD            64 bit time of day in nanoseconds since midnight
 *   ODK_TOD         TOD             32 bit time of day in milliseconds since midnight
 *   ODK_CHAR        CHAR            8 bit character
 * Complex Datatypes:
 *   ODK_DTL         DTL             structure for date and time
 *   ODK_S7STRING    STRING          character string with 8 bit characters
 *   ODK_CLASSIC_DB  VARIANT         classic DB (global or based on UDT - "optimized block access" must be unchecked)
 *   []              ARRAY           field of this datatype
 * User Defined Datatype:
 *   ODK_STRUCT      UDT             user defined structure
 * Return Datatype:
 *   ODK_RESULT      0x0000...0x6FFF function succeeded (ODK_SUCCESS = 0x0000)
 *                   0xF000...0xFFFF function failed
 */

// Basic function in order to show 

ODK_STRUCT complex 
{ 
	ODK_FLOAT re;
	ODK_FLOAT im;
}; 

                        
ODK_RESULT FFT1024p([IN]    ODK_INT16   timeCoef[1024]     // time domain coefficients
                  , [OUT]   complex     freqCoef[1024]);   // frequency domain coefficients
                        
ODK_RESULT LP_Filter([IN]  complex   freqCoef[1024]     // filter input
                   , [OUT] complex   freqCoefFilt[1024]); // filter output
                   
ODK_RESULT IFFT1024p([IN]   complex     freqCoef[1024]   // frequency domain coefficients
                  ,  [OUT]  ODK_INT16   timeCoefOut[1024]);   // time domain coefficients
                  
ODK_RESULT FFT_Filt([IN]    ODK_INT16   timeCoef[1024]     // time domain input coefficients
                  , [OUT]   ODK_INT16   timeCoefOut[1024]);  // time domain output coefficients
                        
